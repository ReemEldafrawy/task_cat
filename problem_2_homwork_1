#include <iostream>
using namespace std;
class queue {
    struct node
    {
        int item;
        node* next;
    };
    node* front;
    node* rear;
    int size;
public:
    queue()
    {
        front = rear = NULL;
        size = 0;
    }
    bool isempty()
    {
        return size == 0;

    }
    void push(int item)
    {
        node* newnode = new node;
        newnode->item = item;
        if (isempty())
        {

            front = rear = newnode;
            newnode->next = NULL;
        }
        else
        {
            rear->next = newnode;
            rear = newnode;
            newnode->next = NULL;



        }
        size++;



    }
    /*void enqueue_front(int item)
    {
        node* newnode = new node;
        newnode->item = item;
        if (size == 0)
        {
            front = rear = newnode;
            size++;
        }
        else
        {
            newnode->next = front;
            front = newnode;

            size++;

        }



    }*/
   /* int dequeue_front()
    {
        if (isempty())
        {
            return 0;
        }
        else
        {
            node* current = front;
            if (front == rear)
            {
                front = rear = NULL;
                size--;
                return front->item;
            }
            else
            {
                // int element = current->data;
                front = front->next;
                current->next = NULL;
                int element = current->item;
                size--;
                delete(current);
                return element;
            }


        }




    }*/

    int pop()
    {
        if (rear == NULL)
        {
            return 0;
        }
        int element;
        if (size=1)
        {
            element = rear->item;
            delete(rear);
            //return element;
            rear = NULL;
        }
        else
        {
            node* current = front;
           // int element = rear -> item;
            while (current->next != rear)
            {
                current = current->next;
            }
            element = rear->item;
            delete(rear);
            rear = current;
            rear->next = NULL;
            






        }
        size--;
        return element;




    }
    int peek()
    {
        return rear->item;
    }






    void display()
    {
        node* current = front;
        while (current != NULL)
        {
            cout << current->item << " ";
            current = current->next;
        }
        cout << endl;
    }


};

int main()
{
    queue q;
    q.push(9);
    q.push(87);
    q.push(6);
    q.push(4);
    q.push(11);
    q.pop();
   // q.dequeue_front();
    //q.pop();
    cout << q.peek() << endl;
    
    q.display();
    
}
